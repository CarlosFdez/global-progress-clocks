@layer modules {
    /* This allows the clock panel to flex into place it placed in that area */
    #scene-controls {
        max-height: fit-content;
    }

    #ui-right-column-1:has(.chat-log[hidden]) #clock-panel {
        max-height: max(500px, calc(100% - 80px));
    }

    #clock-panel {            
        /** We need these components to be visible, and the default is quite low */
        opacity: max(var(--ui-fade-opacity), 0.85);
        display: flex;
        flex-direction: column;
        width: fit-content;
        overflow: hidden;

        .clock-list,
        button {
            pointer-events: all;
        }

        &[data-location=topRight] {
            max-height: max(500px, calc(100% - 650px));
            margin-left: auto;
        }

        &[data-location=bottomLeft] {
            margin-top: 8px;
            flex: 1 1 0;
        }
    }

    .clock-display {
        --private-highlight-color: rgba(138, 80, 255);

        align-items: end;
        display: flex;
        flex-direction: column;
        gap: 8px;
        pointer-events: unset;
        height: 100%;

        &.right {
            .clock-list {            
                direction: rtl;
            }
        }

        &.right {
            align-content: flex-end;
        }

        &.bottom {
            justify-content: end;
        }

        &.editable {
            .clock-list, a {
                pointer-events: initial;
            }
        }

        /** Make button go above */
        &.bottom {
            flex-direction: column-reverse;
        }

        .drag-preview {
            outline: 1px solid white;
        }
        
        .drag-gap {
            visibility: hidden;
        }

        button.ui-control {
            width: unset;
        }

        .clock-list {
            align-items: end;
            display: flex;
            flex-direction: column;
            gap: 8px;
            overflow: auto;
            flex: 1;
            scrollbar-gutter: stable;
        }
        
        .clock-entry {
            position: relative;
            display: flex;
            flex-direction: row-reverse;
            align-items: end;
            height: 44px;
            direction: ltr;

            color: var(--control-icon-color);

            &::before {
                content: ' ';
                position: absolute;
                width: 100%;
                height: 100%;

                border-radius: 5px 22px 22px 5px;
                background: var(--control-bg-color);
                border: 1px solid var(--control-border-color);
                z-index: 0;
            }

            &.private::before {
                border-color: var(--private-highlight-color);
                box-shadow: 0 0 3px inset var(--private-highlight-color);
            }
        
            &.hidden {
                display: none;
            }
        
            &:hover .controls a {
                display: inline;
            }
        
            .name-section {
                display: flex;
                flex-direction: column;
                justify-content: flex-end;
                align-items: end;
                padding: 0 4px 2px 8px;
                overflow-y: hidden;
                z-index: 1;
        
                .name {
                    align-items: center;
                    cursor: initial;
                    display: flex;
                    min-width: 140px;
                    justify-content: end;
                    i {
                        font-size: 0.8em;
                        margin-right: 0.25rem;
                        margin-top: -0.2em;
                        opacity: 0.95;
                    }
                }
            }    
        
            .controls {
                display: flex;
                font-size: 0.9em;
                align-items: center;
                a {
                    display: none;
                    padding: 2px;
                }
            }
        }

        .clock {
            cursor: pointer;
            width: 44px;
            height: 44px;
        
            --spoke-width: 2px;
        
            align-self: center;
            aspect-ratio: 1 / 1;
        
            --filled-ratio: calc(var(--filled) / var(--areas) * 1turn);
            background: conic-gradient(var(--clock-color) var(--filled-ratio), var(--background) var(--filled-ratio) 1turn);
            border-radius: 50%;
            border: black var(--spoke-width) solid;
        
            position: relative;
    
            .spoke {
                width: var(--spoke-width);
            
                /* Make the spokes slightly larger than the inner radius so they overlay half the outer border, preventing subpixel gaps */
                height: calc(50% + .5 * var(--spoke-width));
            
                top: calc(-.5 * var(--spoke-width));
                right: calc(50% - var(--spoke-width) / 2);
            
                background: black;
                position: absolute;
            
                transform-origin: center bottom;
                transform: rotate(calc((var(--index) * 1turn) / var(--areas)));
            }
        }
    }
}
